# This file contains the fastlane.tools configuration
# You can find the documentation at https://docs.fastlane.tools
#
# For a list of all available actions, check out
#
#     https://docs.fastlane.tools/actions
#
# For a list of all available plugins, check out
#
#     https://docs.fastlane.tools/plugins/available-plugins
#

# Uncomment the line if you want fastlane to automatically update itself
# update_fastlane

ENV["FASTLANE_PASSWORD"] = "4MQITzV384bs"
ENV["MATCH_PASSWORD"] = "iOS123456"

default_platform(:ios)

platform :ios do

  lane :adhoc do
    setup_jenkins
    sync_code_signing(
      app_identifier: ["com.aoyikeji.livesone"],
      keychain_password: "iOS123456",
      readonly: true,
      verbose: true,
      skip_docs: true,
      type: "adhoc",
      clone_branch_directly: true
    )
    build_number = increment_build_number
    gym(workspace: "Venus.xcworkspace",
      scheme: "VenusStore", 
      output_directory: "~/jenkins_builds/wallet/appstore/adhoc", 
      clean: true,
      include_bitcode: true,
      configuration: "AdHoc",
      export_options: {
        method: "ad-hoc",
        provisioningProfiles: {"com.aoyikeji.livesone" => "LivesOne Adhoc"}
      })
    # Tag release and push to GitHub
    commit_version_bump(
      message: "Version Bump, build number bump to #{build_number}",# create a commit with a custom message
      force: true
    )
    push_to_git_remote(
      remote: "origin",
      local_branch: "develop",
      remote_branch: "develop",
      tags: false,
      force: true
    )
  end

  lane :testflight do
    setup_jenkins
    sync_code_signing(
      app_identifier: ["com.aoyikeji.livesone"],
      keychain_password: "iOS123456",
      readonly: true,
      verbose: true,
      skip_docs: true,
      type: "appstore",
      clone_branch_directly: true
    )
    build_number = increment_build_number
    gym(workspace: "Venus.xcworkspace",
      scheme: "VenusStore",
      output_directory: "~/jenkins_builds/wallet/appstore/testflight", 
      clean: true,
      include_bitcode: true,
      configuration: "AppStore",
      export_options: {
        method: "app-store",
        provisioningProfiles: {"com.aoyikeji.livesone" => "LivesOne AppStore"}
      })
    # Tag release and push to GitHub
    commit_version_bump(
      message: "Version Bump, build number bump to #{build_number}",# create a commit with a custom message
      force: true
    )
    push_to_git_remote(
      remote: "origin",
      local_branch: "develop",
      remote_branch: "develop",
      tags: false,
      force: true
    )
    upload_to_testflight
  end

  lane :appstore do
    setup_jenkins
    sync_code_signing(
      app_identifier: ["com.aoyikeji.livesone"],
      keychain_password: "iOS123456",
      readonly: true,
      verbose: true,
      skip_docs: true,
      type: "appstore",
      clone_branch_directly: true
    )
    build_number = increment_build_number
    gym(workspace: "Venus.xcworkspace",
      scheme: "VenusStore",
      output_directory: "~/jenkins_builds/wallet/appstore/appstore", 
      clean: true,
      include_bitcode: true,
      configuration: "AppStore",
      export_options: {
        method: "app-store",
        provisioningProfiles: {"com.aoyikeji.livesone" => "LivesOne AppStore"}
      })
    # Tag release and push to GitHub
    commit_version_bump(
      message: "Version Bump, build number bump to #{build_number}",# create a commit with a custom message
      force: true
    )
    push_to_git_remote(
      remote: "origin",
      local_branch: "develop",
      remote_branch: "develop",
      tags: false,
      force: true
    )
    upload_to_app_store(
      force: true,  # Set to true to skip PDF verification
      skip_screenshots: true
    )
  end

end
